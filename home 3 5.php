<?php
// Задача 1: Создание простого массива 
// Создайте массив с именами нескольких ваших друзей и выведите его на экран. 
// Задача: 
// 1. Создайте массив с как минимум 4 именами. 
// 2. Выведите каждое имя на новой строке. 
// Подсказка: 
// Используйте простой массив и цикл  foreach  для вывода элементов. 

$array_friends = ["Анастасия", "Светлана", "Елена", "Александра"];
foreach ($array_friends as $friend) {
    echo $friend. "<br>";
}

// Задача 2: Индексы массива 
// Создайте массив чисел и получите значение элемента по индексу. 
// Задача: 
// 1. Создайте массив из 5 произвольных чисел. 
// 2. Выведите на экран элемент с индексом 2. 
// Подсказка: 
// Используйте нумерацию индексов массива (индексация начинается с 0). 

$array = [3, 4, 2, 9, 8];
echo $array[2]. "<br>";//2

// Задача 3: Ассоциативный массив 
// Создайте ассоциативный массив, который будет содержать информацию о вашем друге: имя, возраст и город. 
// Задача: 
// 1. Создайте массив с ключами  name ,  age  и  city . 
// 2. Выведите на экран имя и возраст друга. 
// Подсказка: 
// Используйте ассоциативный массив, где ключи — это строковые значения, например,  name => "Иван" . 

$array_dr = ["name" => "Елена", "age" => 55, "city" => "Москва"];
echo $array_dr["name"]. " ". $array_dr["age"]. "<br>";

// Задача 4: Массивы с циклами 
// У вас есть массив чисел. Выведите все числа из массива, которые больше 10. 
// Задача: 
// 1. Создайте массив из как минимум 5 чисел. 
// 2. Напишите цикл, который выводит на экран только те числа, которые больше 10. 
// Подсказка: 
// Используйте цикл  foreach  и оператор сравнения  > . 

$array = [45, 5, 8, 23, 16];
foreach ($array as $number) {
    if ($number > 10) {
        echo $number. "<br>";
    }
}

// Задача 5: Работа с массивами функций 
// Создайте массив чисел и посчитайте их сумму. 
// Задача:   
// 1. Создайте массив из 5 чисел. 
// 2. Используйте встроенную функцию PHP для нахождения суммы всех чисел. 
// Подсказка: 
// PHP имеет встроенную функцию  array_sum()  для суммирования элементов массива. 

$array = [9, 4, 2, 7, 15];
$sum = array_sum($array);
echo "Сумма чисел: ". $sum. "<br>";





// Далее представлены задачи повышенной сложности. Достаточно решить 1 из них 

// Задача 6: Учет товаров в магазине 
// Вам необходимо создать систему учета товаров в магазине. Каждый товар должен храниться в виде 
// ассоциативного массива с ключами: 
// name  — название товара 
// price  — цена товара 
// quantity  — количество на складе 
// Задача: 
// 1. Создайте массив товаров (как минимум 5 товаров). 

$array_products = [
    ["name1" => "Товар 1", "price" => 10, "quantity" => 20],
    ["name2" => "Товар 2", "price" => 20, "quantity" => 5],
    ["name3" => "Товар 3", "price" => 30, "quantity" => 15],
    ["name4" => "Товар 4", "price" => 40, "quantity" => 30],
    ["name5" => "Товар 5", "price" => 50, "quantity" => 45]
    ];

// 2. Напишите функцию, которая выводит список всех товаров с их названиями и ценами. 

function print_products($products) {
    foreach ($products as $product) {
        echo "Название: ". $product["name"]. ", цена: ". $product["price"]. "<br>";
    }
}

// 3. Напишите функцию, которая добавляет новый товар в массив. 

function add_product($products, $name, $price, $quantity) {
    $products[] = ["name" => $name, "price" => $price, "quantity" => $quantity];
}

// 4. Напишите функцию, которая обновляет количество товара на складе. 
// Подсказка: 
// Используйте ассоциативные массивы для хранения информации о каждом товаре. Внутри функций 
// манипулируйте массивами с товарами через циклы и ключи. 



// Задача 10: Фильтрация массива 
// У вас есть массив чисел. Вам нужно создать функцию, которая отфильтрует массив и вернет только четные числа. 
// Задача: 
// 1. Создайте массив с числами. 

$number_array = [8, 5, 12, 15, 18, 20, 4, 16, 17, 19];

// 2. Напишите функцию, которая отфильтровывает все нечетные числа и возвращает 
// массив только с четными числами. 
// Подсказка: 
// Для проверки четности числа используйте оператор  % . Внутри функции можете пройтись по массиву с помощью цикла и проверять каждое число.  

function filter_even_numbers($array) {
    $even_numbers = [];
    foreach ($array as $number) {
        if ($number % 2 == 0) {
            $even_numbers[] = $number;
        }
    }
    return $even_numbers;
}
echo $even_numbers;